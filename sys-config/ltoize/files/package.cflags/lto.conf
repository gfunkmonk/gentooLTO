# BEGIN: lto
# Packages which cannot be built with LTO at all
app-text/texlive-core *FLAGS-="-flto*" # fails to compile due to lto-type-mismatch error
dev-python/numpy *FLAGS-="-flto*" # fails to compile due to lto-type-mismatch error
dev-scheme/guile *FLAGS-="-flto*"  # tests fail if built with LTO
media-video/ffmpeg *FLAGS-="-flto*" # fails to compile due to lto-type-mismatch error
dev-libs/libev *FLAGS-="-flto*" # fails to compile due to strict-aliasing error
dev-util/colm *FLAGS-="-flto*" # fails to compile due to lto-type-mismatch error
dev-util/gperf *FLAGS-="-flto*" # fails to compile due to strict-aliasing error
# END: lto

# BEGIN: ffat-lto-objects
# Packages which require fat LTO objects in order to build (TESTING: STRIP_MASK) or which others depend on non-LTO symbols
# END: ffat-lto-objects

# BEGIN: LTO not recommended
# Packages which can be built with LTO but leads to problems/crashes/segfaults
# END: LTO not recommended

# BEGIN: Build Workarounds
# Packages which require build workarounds to be built with LTO that can be resolved directly in *FLAGS
sys-devel/binutils *FLAGS-="-flto*"  # package handles its own LTO and setting it here breaks that
# END: Build Workarounds

# BEGIN: LTO_WARNING_FLAGS workarounds
app-text/texlive-core *FLAGS-="-Werror=strict-aliasing" # fails to compile due to strict-aliasing error
dev-db/sqlite *FLAGS-="-Werror=lto-type-mismatch" # Tests fail with this flag but the package compiles fine
dev-libs/icu *FLAGS-="-Werror=odr" # Tests fail with this flag but the package compiles fine
dev-libs/libev *FLAGS-="-Werror=strict-aliasing" # fails to compile due to strict-aliasing error
dev-libs/nspr *FLAGS-="-Werror=strict-aliasing" # Tests fail with this flag but the package compiles fine
dev-util/gperf *FLAGS-="-Werror=strict-aliasing" # fails to compile due to strict-aliasing error
# END: LTO_WARNING_FLAGS workarounds

# BEGIN: Misc Workarounds
# END: Misc Workarounds
